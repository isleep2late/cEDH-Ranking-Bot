// src/statistics.ts
import gaussian from "gaussian";
var normal = gaussian(0, 1);
var phiMajor = (x) => normal.cdf(x);
var phiMajorInverse = (x) => normal.ppf(x);
var phiMinor = (x) => normal.pdf(x);
var v = (x, t) => {
  const xt = x - t;
  const denom = phiMajor(xt);
  return denom < Number.EPSILON ? -xt : phiMinor(xt) / denom;
};
var w = (x, t) => {
  const xt = x - t;
  const denom = phiMajor(xt);
  if (denom < Number.EPSILON) {
    return x < 0 ? 1 : 0;
  }
  return v(x, t) * (v(x, t) + xt);
};
var vt = (x, t) => {
  const xx = Math.abs(x);
  const b = phiMajor(t - xx) - phiMajor(-t - xx);
  if (b < 1e-5) {
    if (x < 0) return -x - t;
    return -x + t;
  }
  const a = phiMinor(-t - xx) - phiMinor(t - xx);
  return (x < 0 ? -a : a) / b;
};
var wt = (x, t) => {
  const xx = Math.abs(x);
  const b = phiMajor(t - xx) - phiMajor(-t - xx);
  return b < Number.EPSILON ? 1 : ((t - xx) * phiMinor(t - xx) + (t + xx) * phiMinor(-t - xx)) / b + vt(x, t) * vt(x, t);
};
export {
  phiMajor,
  phiMajorInverse,
  phiMinor,
  v,
  vt,
  w,
  wt
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3N0YXRpc3RpY3MudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCBnYXVzc2lhbiBmcm9tICdnYXVzc2lhbidcblxuLy8gdXNlIGEgc3RhbmRhcmQgbm9ybWFsIGRpc3RyaWJ1dGlvbiAtIG1lYW4gb2YgemVybywgc3RkZGV2L3ZhcmlhbmNlIG9mIG9uZVxuY29uc3Qgbm9ybWFsID0gZ2F1c3NpYW4oMCwgMSlcblxuZXhwb3J0IGNvbnN0IHBoaU1ham9yID0gKHg6IG51bWJlcikgPT4gbm9ybWFsLmNkZih4KVxuXG5leHBvcnQgY29uc3QgcGhpTWFqb3JJbnZlcnNlID0gKHg6IG51bWJlcikgPT4gbm9ybWFsLnBwZih4KVxuXG5leHBvcnQgY29uc3QgcGhpTWlub3IgPSAoeDogbnVtYmVyKSA9PiBub3JtYWwucGRmKHgpXG5cbmV4cG9ydCBjb25zdCB2ID0gKHg6IG51bWJlciwgdDogbnVtYmVyKSA9PiB7XG4gIGNvbnN0IHh0ID0geCAtIHRcbiAgY29uc3QgZGVub20gPSBwaGlNYWpvcih4dClcbiAgcmV0dXJuIGRlbm9tIDwgTnVtYmVyLkVQU0lMT04gPyAteHQgOiBwaGlNaW5vcih4dCkgLyBkZW5vbVxufVxuXG5leHBvcnQgY29uc3QgdyA9ICh4OiBudW1iZXIsIHQ6IG51bWJlcikgPT4ge1xuICBjb25zdCB4dCA9IHggLSB0XG4gIGNvbnN0IGRlbm9tID0gcGhpTWFqb3IoeHQpXG4gIGlmIChkZW5vbSA8IE51bWJlci5FUFNJTE9OKSB7XG4gICAgcmV0dXJuIHggPCAwID8gMSA6IDBcbiAgfVxuICByZXR1cm4gdih4LCB0KSAqICh2KHgsIHQpICsgeHQpXG59XG5cbmV4cG9ydCBjb25zdCB2dCA9ICh4OiBudW1iZXIsIHQ6IG51bWJlcikgPT4ge1xuICBjb25zdCB4eCA9IE1hdGguYWJzKHgpXG4gIGNvbnN0IGIgPSBwaGlNYWpvcih0IC0geHgpIC0gcGhpTWFqb3IoLXQgLSB4eClcbiAgaWYgKGIgPCAxZS01KSB7XG4gICAgaWYgKHggPCAwKSByZXR1cm4gLXggLSB0XG4gICAgcmV0dXJuIC14ICsgdFxuICB9XG4gIGNvbnN0IGEgPSBwaGlNaW5vcigtdCAtIHh4KSAtIHBoaU1pbm9yKHQgLSB4eClcbiAgcmV0dXJuICh4IDwgMCA/IC1hIDogYSkgLyBiXG59XG5cbmV4cG9ydCBjb25zdCB3dCA9ICh4OiBudW1iZXIsIHQ6IG51bWJlcikgPT4ge1xuICBjb25zdCB4eCA9IE1hdGguYWJzKHgpXG4gIGNvbnN0IGIgPSBwaGlNYWpvcih0IC0geHgpIC0gcGhpTWFqb3IoLXQgLSB4eClcbiAgcmV0dXJuIGIgPCBOdW1iZXIuRVBTSUxPTlxuICAgID8gMS4wXG4gICAgOiAoKHQgLSB4eCkgKiBwaGlNaW5vcih0IC0geHgpICsgKHQgKyB4eCkgKiBwaGlNaW5vcigtdCAtIHh4KSkgLyBiICsgdnQoeCwgdCkgKiB2dCh4LCB0KVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLE9BQU8sY0FBYztBQUdyQixJQUFNLFNBQVMsU0FBUyxHQUFHLENBQUM7QUFFckIsSUFBTSxXQUFXLENBQUMsTUFBYyxPQUFPLElBQUksQ0FBQztBQUU1QyxJQUFNLGtCQUFrQixDQUFDLE1BQWMsT0FBTyxJQUFJLENBQUM7QUFFbkQsSUFBTSxXQUFXLENBQUMsTUFBYyxPQUFPLElBQUksQ0FBQztBQUU1QyxJQUFNLElBQUksQ0FBQyxHQUFXLE1BQWM7QUFDekMsUUFBTSxLQUFLLElBQUk7QUFDZixRQUFNLFFBQVEsU0FBUyxFQUFFO0FBQ3pCLFNBQU8sUUFBUSxPQUFPLFVBQVUsQ0FBQyxLQUFLLFNBQVMsRUFBRSxJQUFJO0FBQ3ZEO0FBRU8sSUFBTSxJQUFJLENBQUMsR0FBVyxNQUFjO0FBQ3pDLFFBQU0sS0FBSyxJQUFJO0FBQ2YsUUFBTSxRQUFRLFNBQVMsRUFBRTtBQUN6QixNQUFJLFFBQVEsT0FBTyxTQUFTO0FBQzFCLFdBQU8sSUFBSSxJQUFJLElBQUk7QUFBQSxFQUNyQjtBQUNBLFNBQU8sRUFBRSxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJO0FBQzlCO0FBRU8sSUFBTSxLQUFLLENBQUMsR0FBVyxNQUFjO0FBQzFDLFFBQU0sS0FBSyxLQUFLLElBQUksQ0FBQztBQUNyQixRQUFNLElBQUksU0FBUyxJQUFJLEVBQUUsSUFBSSxTQUFTLENBQUMsSUFBSSxFQUFFO0FBQzdDLE1BQUksSUFBSSxNQUFNO0FBQ1osUUFBSSxJQUFJLEVBQUcsUUFBTyxDQUFDLElBQUk7QUFDdkIsV0FBTyxDQUFDLElBQUk7QUFBQSxFQUNkO0FBQ0EsUUFBTSxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxTQUFTLElBQUksRUFBRTtBQUM3QyxVQUFRLElBQUksSUFBSSxDQUFDLElBQUksS0FBSztBQUM1QjtBQUVPLElBQU0sS0FBSyxDQUFDLEdBQVcsTUFBYztBQUMxQyxRQUFNLEtBQUssS0FBSyxJQUFJLENBQUM7QUFDckIsUUFBTSxJQUFJLFNBQVMsSUFBSSxFQUFFLElBQUksU0FBUyxDQUFDLElBQUksRUFBRTtBQUM3QyxTQUFPLElBQUksT0FBTyxVQUNkLE1BQ0UsSUFBSSxNQUFNLFNBQVMsSUFBSSxFQUFFLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7QUFDM0Y7IiwKICAibmFtZXMiOiBbXQp9Cg==