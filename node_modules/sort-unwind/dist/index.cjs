"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  curried: () => curried,
  default: () => src_default,
  unwind: () => unwind
});
module.exports = __toCommonJS(src_exports);
var curried = (rank) => (src) => {
  if (src.length === 0) return [[], []];
  const zipped = [];
  src.forEach((_, i) => {
    zipped.push([rank[i], i, src[i]]);
  });
  zipped.sort(([a], [b]) => a - b);
  const dst = [];
  const derank = [];
  zipped.forEach(([_, i, o]) => {
    derank.push(i);
    dst.push(o);
  });
  return [dst, derank];
};
var unwind = (rank, src) => curried(rank)(src);
var src_default = unwind;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  curried,
  unwind
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2luZGV4LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJleHBvcnQgY29uc3QgY3VycmllZCA9XG4gIChyYW5rOiBudW1iZXJbXSkgPT5cbiAgPFQ+KHNyYzogVFtdKTogW1RbXSwgbnVtYmVyW11dID0+IHtcbiAgICBpZiAoc3JjLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtbXSwgW11dXG5cbiAgICBjb25zdCB6aXBwZWQ6IFtudW1iZXIsIG51bWJlciwgYW55XVtdID0gW11cbiAgICBzcmMuZm9yRWFjaCgoXywgaSkgPT4ge1xuICAgICAgemlwcGVkLnB1c2goW3JhbmtbaV0sIGksIHNyY1tpXV0pXG4gICAgfSlcbiAgICAvLyBBcnJheS5zb3J0IHdpbGwgbXV0YXRlIHRoZSBhcnJheSwgc28gd2UgbXVzdCBtYWtlIGFub3RoZXJcbiAgICB6aXBwZWQuc29ydCgoW2FdLCBbYl0pID0+IGEgLSBiKVxuXG4gICAgY29uc3QgZHN0OiBUW10gPSBbXVxuICAgIGNvbnN0IGRlcmFuazogbnVtYmVyW10gPSBbXVxuICAgIHppcHBlZC5mb3JFYWNoKChbXywgaSwgb10pID0+IHtcbiAgICAgIGRlcmFuay5wdXNoKGkpXG4gICAgICBkc3QucHVzaChvKVxuICAgIH0pXG4gICAgcmV0dXJuIFtkc3QsIGRlcmFua11cbiAgfVxuXG4vLyBpZiBpIHVuZGVyc3Rvb2QgZ2VuZXJpY3MgYmV0dGVyLCBpIHRoaW5rIHRoaXMgY291bGQgZ28gYmFja1xuLy8gdG8ganVzdCBiZWluZyBvbmUgZXhwb3J0ZWQgZnVuY3Rpb24gd2l0aCBhbiBvcHRpb25hbCBzZWNvbmRcbi8vIHBhcmFtLi4uIGJ1dCB0aGlzIGlzIGp1c3Qgc2ltcGxlci5cbmV4cG9ydCBjb25zdCB1bndpbmQgPSA8VD4ocmFuazogbnVtYmVyW10sIHNyYzogVFtdKSA9PiBjdXJyaWVkKHJhbmspKHNyYylcblxuLy8gZGVwcmVjYXRlZCwgd2lsbCBiZSByZW1vdmVkIGluIHZlcnNpb24gNFxuZXhwb3J0IGRlZmF1bHQgdW53aW5kXG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQU8sSUFBTSxVQUNYLENBQUMsU0FDRCxDQUFJLFFBQThCO0FBQ2hDLE1BQUksSUFBSSxXQUFXLEVBQUcsUUFBTyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7QUFFcEMsUUFBTSxTQUFrQyxDQUFDO0FBQ3pDLE1BQUksUUFBUSxDQUFDLEdBQUcsTUFBTTtBQUNwQixXQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7QUFBQSxFQUNsQyxDQUFDO0FBRUQsU0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBRS9CLFFBQU0sTUFBVyxDQUFDO0FBQ2xCLFFBQU0sU0FBbUIsQ0FBQztBQUMxQixTQUFPLFFBQVEsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU07QUFDNUIsV0FBTyxLQUFLLENBQUM7QUFDYixRQUFJLEtBQUssQ0FBQztBQUFBLEVBQ1osQ0FBQztBQUNELFNBQU8sQ0FBQyxLQUFLLE1BQU07QUFDckI7QUFLSyxJQUFNLFNBQVMsQ0FBSSxNQUFnQixRQUFhLFFBQVEsSUFBSSxFQUFFLEdBQUc7QUFHeEUsSUFBTyxjQUFROyIsCiAgIm5hbWVzIjogW10KfQo=